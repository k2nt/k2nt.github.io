apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "carbonedge-tier1.fullname" . }}
  labels:
    {{- include "carbonedge-tier1.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "carbonedge-tier1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "carbonedge-tier1.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: {{ include "carbonedge-tier1.fullname" }}-docker-registry
      {{- end }}
      serviceAccountName: {{ include "carbonedge-tier1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/venv/bin/sinfonia-tier1"
          args: []
          env:
            {{- if and .Values.sinfoniaRecipes }}
            - name: SINFONIA_RECIPES
              value: {{ .Values.sinfoniaRecipes }}
            {{- end }}
            {{- if and .Values.sinfoniaTier1Matchers }}
            - name: SINFONIA_MATCHERS
              value: {{ .Values.sinfoniaTier1Matchers }}
            {{- end }}
            {{- if and .Values.sinfoniaTier1Cloudlets }}
            - name: SINFONIA_CLOUDLETS
              value: {{ .Values.sinfoniaTier1Cloudlets }}
            {{- end }}
            {{- if and .Values.carbonedgeTier1CarbonLogFolderPath }}
            - name: CARBONEDGE_CARBON_LOG_FOLDER_PATH
              value: {{ .Values.carbonedgeTier1CarbonLogFolderPath }}
            {{- end }}
          ports:
            - name: http
              containerPort: 5000
              hostPort: {{ .Values.ports.hostPort | default 5000 }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
